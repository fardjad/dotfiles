#!/usr/bin/env bash

set -e

source "$(dirname "$0")/bootstrap.bash"

prepare_codespaces() {
  if ! is_codespaces; then
    return 0
  fi

  test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
  test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

  if check_command brew; then
    return 0
  fi

  info 'running in codespaces, installing brew'

  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

  if check_command apt-get; then
    sudo apt-get update
    sudo apt-get install -y build-essential

    LOCALE="en_US.UTF-8"
    sudo update-locale "LANG=$LOCALE"
    sudo locale-gen --purge "$LOCLE"
    sudo dpkg-reconfigure --frontend noninteractive locales
  else
    fail 'unsupported distro package manager'
  fi

  brew_install gcc
}

check_dependencies() {
  check_command git || fail 'git is not installed'
  check_command curl || fail 'curl is not installed'
  check_command bash || fail 'bash is not installed'
  check_command sudo || fail 'sudo is not installed'
}

check_brew_doctor() {
  if ! brew doctor > /dev/null; then
    user "brew doctor is not happy!"
  fi
}

link_file() {
  if [ -e "$2" ]; then
    if [ "$(readlink "$2")" = "$1" ]; then
      success "skipped $1"
      return 0
    else
      mv "$2" "$2.backup"
      success "moved $2 to $2.backup"
    fi
  fi
  ln -sf "$1" "$2"
  success "linked $1 to $2"
}

link_dotfiles() {
  info 'linking dotfiles'
  find -H "$DOTFILES" -name '*.symlink' -not -path '*.git*' \
    | while read -r src; do
      dst="$HOME/.$(basename "${src%.*}")"
      link_file "$src" "$dst"
    done
}

run_installers() {
  info 'running installers'
  find -H "$DOTFILES" -maxdepth 2 -name 'install.sh' -not -path '*.git*' \
    | while read -r installer; do
      info "running ${installer}..."
      bash < /dev/null -c "$installer"
    done
}

check_dependencies
prepare_codespaces
check_brew_doctor
link_dotfiles
run_installers

echo '  All done! Make sure to check the logs for errors.'
echo '  Restart the terminal session and enjoy!'
