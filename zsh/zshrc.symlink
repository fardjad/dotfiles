# shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$(readlink -f $(dirname $(readlink -f $(print -P %N)))/..)"

# Linux
[ -d /home/linuxbrew/.linuxbrew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
# macOS on Apple Silicon
[ -f /opt/homebrew/bin/brew ] && eval $(/opt/homebrew/bin/brew shellenv)

export PATH="$(brew --prefix)/sbin:$PATH"

export ZSH_DISABLE_COMPFIX="true"

source "$(brew --prefix antidote)/share/antidote/antidote.zsh"
antidote load

# use .localrc for SUPER SECRET CRAP that you don't want in your public, 
# versioned repo.
[ -f ~/.localrc ] && . ~/.localrc

# https://stackoverflow.com/a/70180134
function sortByFilename {
  local -a ary
  printf -v ary '%s/%s' ${${argv:t}:^argv}
  print -l ${${(n)ary}#*/}
}

typeset -U config_files

setopt extended_glob
config_files=($DOTFILES/^(node_modules|adocs|docs)*/*.zsh)
unsetopt extended_glob

config_files=($(sortByFilename $config_files))
unset -f sortByFilename

# filter out disabled directories
config_files=(${config_files:#*.disable*/*})

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

unset config_files updated_at
